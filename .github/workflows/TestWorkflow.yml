name: Test Workflow
on:
  - workflow_dispatch
  - push
env:
  TARGET_DIRECTORY: 'D:\temp\siml'
jobs:
  job1:
    runs-on: self-hosted
    steps:
      - name: Print Greeting
        run: |
            echo $env:TARGET_DIRECTORY
            echo "Hello World"
            
      - name: Checkout
        uses: actions/checkout@v4

      - name: Print workspace
        run: |
          echo ${{ github.workspace }}
          echo $GITHUB_WORKSPACE

      
      - name: Changed Files
        uses: dorny/paths-filter@v3
        id: changes
        with:
          list-files: csv
          filters: |
            deletedFiles:
              - deleted: 'src/**'
            addedOrModified:
            - added|modified: 'src/**'
          #- added|deleted|modified: 'src/**'
  

      # - if: steps.changes.outputs.src == 'true'
      #   run: echo "HIT"
      - if: steps.changes.outputs.deletedFiles == 'true'
        env:
          ALL_DELETED: ${{ steps.changes.outputs.deletedFiles_files }}
        run: echo $env:ALL_DELETED

      - if: steps.changes.outputs.addedOrModified == 'true'
        env:
          ALL_MODIFIED: ${{ steps.changes.outputs.addedOrModified_files }}
        run: |
          echo $env:ALL_MODIFIED

      - name: Create Variable
        #shell: bash
        #run: echo "action_state=yellow" >> $GITHUB_ENV
        #shell: pwsh
        run: Add-Content -Path ${env:GITHUB_ENV} -Value "action_state=red"

      - name: Display Variable
        #shell: bash
        #run : echo ${{ env.action_state }}
        #shell: pwsh
        run: echo ${{ env.action_state }}"
   

      #- name: File List
      #  env:
      #    ALL_CHANGED_FILES: ${{ steps.changes.outputs.src_files }}
      #    ALL_CHANGED_FILES_COUNT: ${{ steps.changes.outputs.src_count }}

      #    ALL_DELETED_FILES: ${{ steps.changes.outputs.deletes_files }}
      #  run: |
      #    echo $env:ALL_CHANGED_FILES
      #    echo $env:ALL_CHANGED_FILES_COUNT
      #    echo $env:ALL_DELETED_FILES

      #- name: Get changed files
      #  id: changed-files
      #  uses: tj-actions/changed-files@v44

      #- name: List all changed files 
      #  env:
      #   ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      #  run: echo $env:ALL_CHANGED_FILES

      #- name: Loop Files
      #  env:
      #   ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      #  shell: bash
      #  run: |
      #    for file in ${ALL_CHANGED_FILES}; do echo "$file"; done

      - name: Print Goodbye
        run: echo "Goodbye World"
 


